diff --git a/node_modules/react-native-web/dist/cjs/exports/TurboModuleRegistry/index.js b/node_modules/react-native-web/dist/cjs/exports/TurboModuleRegistry/index.js
new file mode 100644
index 0000000..f1ee4e8
--- /dev/null
+++ b/node_modules/react-native-web/dist/cjs/exports/TurboModuleRegistry/index.js
@@ -0,0 +1,46 @@
+"use strict";
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * 
+ * @format
+ */
+
+'use client';
+
+const NativeModules = require('../NativeModules');
+
+import invariant from 'invariant';
+
+function requireModule(name) {
+  const legacyModule = NativeModules[name];
+  if (legacyModule != null) {
+    return legacyModule;
+  }
+
+  return null;
+}
+
+function get(name) {
+  return requireModule(name);
+}
+
+function getEnforcing(name) {
+  const module = requireModule(name);
+  invariant(
+    module != null,
+    `TurboModuleRegistry.getEnforcing(...): '${name}' could not be found. ` +
+    'Verify that a module by this name is registered in the native binary.',
+  );
+  return module;
+}
+
+var TurboModuleRegistry = {
+  get,
+  getEnforcing,
+};
+
+export default TurboModuleRegistry;
\ No newline at end of file
diff --git a/node_modules/react-native-web/dist/cjs/index.js b/node_modules/react-native-web/dist/cjs/index.js
index b696270..a465572 100644
--- a/node_modules/react-native-web/dist/cjs/index.js
+++ b/node_modules/react-native-web/dist/cjs/index.js
@@ -15,6 +15,8 @@ var _unmountComponentAtNode = _interopRequireDefault(require("./exports/unmountC
 exports.unmountComponentAtNode = _unmountComponentAtNode.default;
 var _NativeModules = _interopRequireDefault(require("./exports/NativeModules"));
 exports.NativeModules = _NativeModules.default;
+var _TurboModuleRegistry = _interopRequireDefault(require("./exports/TurboModuleRegistry"));
+exports.TurboModuleRegistry = _TurboModuleRegistry.default;
 var _AccessibilityInfo = _interopRequireDefault(require("./exports/AccessibilityInfo"));
 exports.AccessibilityInfo = _AccessibilityInfo.default;
 var _Alert = _interopRequireDefault(require("./exports/Alert"));
diff --git a/node_modules/react-native-web/dist/exports/TurboModuleRegistry/index.js b/node_modules/react-native-web/dist/exports/TurboModuleRegistry/index.js
new file mode 100644
index 0000000..6bac854
--- /dev/null
+++ b/node_modules/react-native-web/dist/exports/TurboModuleRegistry/index.js
@@ -0,0 +1,44 @@
+/**
+ * Copyright (c) Nicolas Gallagher.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ *
+ */
+
+'use client';
+
+const NativeModules = require('react-native-web/dist/exports/NativeModules');
+
+import invariant from 'invariant';
+
+function requireModule(name) {
+  const legacyModule = NativeModules[name];
+  if (legacyModule != null) {
+    return legacyModule;
+  }
+
+  return null;
+}
+
+function get(name) {
+  return requireModule(name);
+}
+
+function getEnforcing(name) {
+  const module = requireModule(name);
+  invariant(
+    module != null,
+    `TurboModuleRegistry.getEnforcing(...): '${name}' could not be found. ` +
+    'Verify that a module by this name is registered in the native binary.',
+  );
+  return module;
+}
+
+var TurboModuleRegistry = {
+  get,
+  getEnforcing,
+};
+
+export default TurboModuleRegistry;
\ No newline at end of file
diff --git a/node_modules/react-native-web/dist/index.js b/node_modules/react-native-web/dist/index.js
index 4f69987..48976d0 100644
--- a/node_modules/react-native-web/dist/index.js
+++ b/node_modules/react-native-web/dist/index.js
@@ -4,6 +4,7 @@ export { default as processColor } from './exports/processColor';
 export { default as render } from './exports/render';
 export { default as unmountComponentAtNode } from './exports/unmountComponentAtNode';
 export { default as NativeModules } from './exports/NativeModules';
+export { default as TurboModuleRegistry } from './exports/TurboModuleRegistry';
 
 // APIs
 export { default as AccessibilityInfo } from './exports/AccessibilityInfo';
